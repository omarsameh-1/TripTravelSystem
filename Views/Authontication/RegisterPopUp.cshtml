@model TripTravelSystem.Models.User

@{
    ViewBag.Title = "Registed Successfully";
}

@if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
{
    <div class="alert alert-danger">
        <strong>Success!</strong>@ViewBag.Message +<a href="https://mail.google.com/mail/u/0/#inbox"  class="btn btn-default">Go To Your Gmail</a>
    </div>
}
else
{

    <div class="modal-header border-bottom-0">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">×</span>
        </button>
    </div>
    <div class="modal-body">
        <div class="form-title text-center" id="exampleModalCenterTitle">
            <h4>Registeration</h4>
        </div>
        <div class="d-flex flex-column text-center">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.firstName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.lastName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                            @Html.ValidationMessage("Emailexist", new { @class = "text-danger" });
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.photo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.photo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.photo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.roleTypeID, "roleTypeID", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("roleTypeID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.roleTypeID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Register" class="btn btn-info btn-block btn-round" />
                        </div>
                    </div>
                </div>

                if (ViewBag.Message != null)
                {
                    <div class="alert alert-danger">
                        <strong>Error!</strong>@ViewBag.Message
                    </div>
                }
            }

        </div>
    </div>
    <div>
        @*@Html.ActionLink("Login", "LoginPopUp")*@
        <a class="btn btn-outline-success  btn-round" href="@Url.Action("LoginPopUp","Authontication")" type="button" data-toggle="modal" data-target="#LoginModel">Login</a>
    </div>
}



